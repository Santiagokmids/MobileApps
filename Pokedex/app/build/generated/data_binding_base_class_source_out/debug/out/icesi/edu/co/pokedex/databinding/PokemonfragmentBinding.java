// Generated by view binder compiler. Do not edit!
package icesi.edu.co.pokedex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import icesi.edu.co.pokedex.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PokemonfragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView pokemonImage;

  @NonNull
  public final TextInputLayout pokemonInput;

  @NonNull
  public final TextView pokemonName;

  @NonNull
  public final Button searchButton;

  private PokemonfragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView pokemonImage, @NonNull TextInputLayout pokemonInput,
      @NonNull TextView pokemonName, @NonNull Button searchButton) {
    this.rootView = rootView;
    this.pokemonImage = pokemonImage;
    this.pokemonInput = pokemonInput;
    this.pokemonName = pokemonName;
    this.searchButton = searchButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PokemonfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PokemonfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pokemonfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PokemonfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pokemonImage;
      ImageView pokemonImage = ViewBindings.findChildViewById(rootView, id);
      if (pokemonImage == null) {
        break missingId;
      }

      id = R.id.pokemonInput;
      TextInputLayout pokemonInput = ViewBindings.findChildViewById(rootView, id);
      if (pokemonInput == null) {
        break missingId;
      }

      id = R.id.pokemonName;
      TextView pokemonName = ViewBindings.findChildViewById(rootView, id);
      if (pokemonName == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      return new PokemonfragmentBinding((ConstraintLayout) rootView, pokemonImage, pokemonInput,
          pokemonName, searchButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
